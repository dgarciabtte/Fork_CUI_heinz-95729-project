# The environment this is running in
# /^(local|test|development|production)$/
NODE_ENV=local

# The origin of the web app that's connecting to this API
CLIENT_ORIGIN='http://localhost:3000'

# The port for the server
PORT=3001

# The http path that the API is addressable at.
# When running the API in a proxy, this path
# is likely '/api'. If the API is not running
# in a proxy, set it to an empty string ''
SERVER_PROXY_PREFIX='/api'

# Cookie Expiry in milliseconds, which koa\'s ctx.cookies.set requires
# This is also converted to seconds and set to SESSIONS_EXPIRE_IN_S, which
# is used for the JWT exp claim (default is 2592000000 = 86400000 * 30 = 30d)
SESSIONS_EXPIRE_IN_MS=2592000000

# A comma separated list of {string_1:string_2} pairs in which
# string_1 is a unique identifier (e.g. a cuid2) and
# string_2 is a CPRNG that is the same size as the has output
# (e.g. when using HS256, the CPRNG must be 256 bits (32 utf8 chars))
# (e.g. when using HS512, the CPRNG must be 512 bits (64 utf8 chars)).
# These are used to sign JWTs. The examples given here are 256bit:256bit pairs.
# The first secret is always used to sign new JWTs. The additional secrets
# are used for verification when the first secret fails verification.
# This is to support secret rotation. New secrets should always be unshifted
# on to the array (added at the beginning), and secrets that are no longer
# valid should always be popped (removed from the end).
SESSIONS_SECRETS='tmswvqnfg1prrsolurly035ticvdrn8l:xhynktgmqksygdzdwram5bvh69821iws,ux1k7gsxl8yvphlr003v2z9j5rldc9ds:iq7ruh17oh9cp4qy15mwl6l0s1y9l042:1681851690626'

# The log writer to pipe log output to
# @see https://github.com/losandes/polyn-logger#available-writers-and-formatters
# /^(ArrayWriter|ConsoleWriter|DevConsoleWriter|StdoutWriter)$/
LOG_WRITER=DevConsoleWriter

# The log formatter to use
# @see https://github.com/losandes/polyn-logger#available-writers-and-formatters
# /^(BlockFormatter|BunyanFormatter|JsonFormatter|PassThroughFormatter|StringFormatter|SquashFormatter)$/
LOG_FORMATTER=BlockFormatter

# The events to pipe to the default logger
# Example listeners:
#   METRICS:
#   'count,error_count,gauge_increase,gauge_decrease,latency'
#
#   AUDIT TRAIL:
#   (e.g. events that should be auditable, such as access to, or modification of PII )
#   'audit_info,audit_warn'
#
#   ONLY ACCEPTABLE FOR LOCAL DEV:
#   (e.g. reduce risk of loggind secrets or confidential info in production)
#   'local,todo'
#
#   FOR TESTING INTERNAL ACTIVITIES
#   (e.g. to debug private/encapsulated code, sequences, etc.)
#   'test'
#
#   STANDARD LOGGING FARE:
#   'trace,debug,info,warn,error,fatal',
LOG_EVENTS='local,todo,trace,debug,info,warn,error,fatal'

# the path to where the database file will be written
# Keyv removes 'sqlite://' from the connection string
# (e.g. PATH_TO_KEYV_DB.replace(/^sqlite:\/\//, ''))
# use 2 slashes for a relative path:
PATH_TO_KEYV_DB='sqlite://data_volumes/heinz-95729.db'

# use 3 slashes for an absolute path: `sqlite:///absolute/path/heinz-95729.db`
# PATH_TO_KEYV_DB='sqlite:///Users/{{your_username}}/{{path_to_this_repo}}/server/data_volumes/heinz-95729.db'

# to use an in memory database, use:
# PATH_TO_KEYV_DB='sqlite://:memory:'

# the path to where the GraphQL schema is defined
PATH_TO_GRAPHQL_SCHEMA='schema/schema.graphql'
